#!/usr/bin/env bash
#
# An utility script helping with reproducible script builds via docker.
# Note that this utility serves only as one example, docker is not
# necessarily THE way to do reproducible build, nor is it the best way
# to do reproducible build.
set -ex

DOCKER_IMAGE="docker.io/cryptape/llvm-n-rust:20240630"
CHECKSUM_FILE_PATH="checksums.txt"

# We are parsing command line arguments based on tips from:
# https://stackoverflow.com/a/14203146

while [[ $# -gt 0 ]]; do
  case $1 in
    -p|--proxy)
      PROXY="$2"
      shift # past argument
      shift # past value
      ;;
    -u|--update)
      UPDATE="yes"
      shift # past argument
      ;;
    --no-clean)
      NOCLEAN="yes"
      shift # past argument
      ;;
    -*|--*)
      echo "Unknown option $1"
      exit 1
      ;;
    *)
      echo "Unknown argument $1"
      exit 1
      ;;
  esac
done

if [[ -n "${PROXY}" ]]; then
  PROXY_ARGS="-e ALL_PROXY=${PROXY} -e HTTPS_PROXY=${PROXY} -e HTTP_PROXY=${PROXY}"
fi

TASKS=""
if [[ "${NOCLEAN}" != "yes" ]]; then
  TASKS+=" clean "
fi

if [[ "${UPDATE}" = "yes" ]]; then
  TASKS+=" checksum CHECKSUM_FILE=${CHECKSUM_FILE_PATH} "
else
  TASKS+=" build "
fi

docker run --rm $PROXY_ARGS -v `pwd`:/code $DOCKER_IMAGE make $TASKS

if [[ "${UPDATE}" = "yes" ]]; then
  echo "${CHECKSUM_FILE_PATH} file is updated with latest binary hashes!"
else
# on mac:
# brew install coreutils
  sha256sum -c ${CHECKSUM_FILE_PATH}
fi

